# =================================================================
# DOCKER COMPOSE PARA FAMILIA GASTRO
# =================================================================
version: '3.8'

services:
  # Aplicación Django
  web:
    build: .
    container_name: familia_gastro_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    environment:
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=familia_gastro
      - DB_USER=postgres
      - DB_PASSWORD=postgres_password
      - DB_HOST=db
      - DB_PORT=5432
      - CACHE_BACKEND=django.core.cache.backends.redis.RedisCache
      - CACHE_LOCATION=redis://redis:6379/1
    depends_on:
      - db
      - redis
    networks:
      - familia_gastro_network

  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: familia_gastro_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=familia_gastro
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
    networks:
      - familia_gastro_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: familia_gastro_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - familia_gastro_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx como proxy reverso (producción)
  nginx:
    image: nginx:alpine
    container_name: familia_gastro_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - familia_gastro_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  familia_gastro_network:
    driver: bridge